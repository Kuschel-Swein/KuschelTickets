/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.2.0 (2020-02-13)
 */
! function () {
    "use strict";

    function e() {}

    function r(e) {
        return function () {
            return e
        }
    }
    var a = function (e) {
            function t() {
                return n
            }
            var n = e;
            return {
                get: t,
                set: function (e) {
                    n = e
                },
                clone: function () {
                    return a(t())
                }
            }
        },
        t = tinymce.util.Tools.resolve("tinymce.PluginManager"),
        i = function (e, t) {
            e.addCommand("mceHelp", t)
        },
        s = function (e, t) {
            e.ui.registry.addButton("help", {
                icon: "help",
                tooltip: "Help",
                onAction: t
            }), e.ui.registry.addMenuItem("help", {
                text: "Help",
                icon: "help",
                shortcut: "Alt+0",
                onAction: t
            })
        },
        c = function () {
            return (c = Object.assign || function (e) {
                for (var t, n = 1, o = arguments.length; n < o; n++)
                    for (var a in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
                return e
            }).apply(this, arguments)
        };

    function l(o) {
        for (var a = [], e = 1; e < arguments.length; e++) a[e - 1] = arguments[e];
        return function () {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            var n = a.concat(e);
            return o.apply(null, n)
        }
    }

    function n() {
        return m
    }
    var o, u = r(!1),
        h = r(!0),
        m = (o = {
            fold: function (e, t) {
                return e()
            },
            is: u,
            isSome: u,
            isNone: h,
            getOr: f,
            getOrThunk: d,
            getOrDie: function (e) {
                throw new Error(e || "error: getOrDie called on none.")
            },
            getOrNull: r(null),
            getOrUndefined: r(undefined),
            or: f,
            orThunk: d,
            map: n,
            each: e,
            bind: n,
            exists: u,
            forall: h,
            filter: n,
            equals: p,
            equals_: p,
            toArray: function () {
                return []
            },
            toString: r("none()")
        }, Object.freeze && Object.freeze(o), o);

    function p(e) {
        return e.isNone()
    }

    function d(e) {
        return e()
    }

    function f(e) {
        return e
    }

    function g(e, t) {
        return O.call(e, t)
    }

    function b(e, t) {
        return -1 < g(e, t)
    }

    function y(e, t) {
        for (var n = e.length, o = new Array(n), a = 0; a < n; a++) {
            var r = e[a];
            o[a] = t(r, a)
        }
        return o
    }

    function k(e, o) {
        return e.replace(/\$\{([^{}]*)\}/g, function (e, t) {
            var n = o[t];
            return function (e) {
                var t = typeof e;
                return "string" == t || "number" == t
            }(n) ? n.toString() : e
        })
    }

    function v(e) {
        var t = F(e);
        return function (e, t) {
            var n = g(e, t);
            return -1 === n ? x.none() : x.some(n)
        }(t, "versions").each(function (e) {
            t.splice(e, 1), t.push("versions")
        }), {
            tabs: e,
            names: t
        }
    }

    function w(e, t) {
        var n, o = H(),
            a = B(),
            r = D(e),
            i = L(),
            s = c(((n = {})[o.name] = o, n[a.name] = a, n[r.name] = r, n[i.name] = i, n), t.get());
        return function (e) {
            return x.from(e.getParam("help_tabs"))
        }(e).fold(function () {
            return v(s)
        }, function (e) {
            return function (e, t) {
                var n = {},
                    o = y(e, function (e) {
                        return "string" == typeof e ? (_(t, e) && (n[e] = t[e]), e) : (n[e.name] = e).name
                    });
                return {
                    tabs: n,
                    names: o
                }
            }(e, s)
        })
    }

    function A(a, r) {
        return function () {
            var e = w(a, r),
                t = e.tabs,
                n = e.names,
                o = {
                    type: "tabpanel",
                    tabs: function (e) {
                        for (var t = [], n = function (e) {
                                t.push(e)
                            }, o = 0; o < e.length; o++) e[o].each(n);
                        return t
                    }(y(n, function (e) {
                        return function (e, t) {
                            return _(e, t) ? x.from(e[t]) : x.none()
                        }(t, e)
                    }))
                };
            a.windowManager.open({
                title: "Help",
                size: "medium",
                body: o,
                buttons: [{
                    type: "cancel",
                    name: "close",
                    text: "Close",
                    primary: !0
                }],
                initialData: {}
            })
        }
    }
    var C, T = function (n) {
            function e() {
                return a
            }

            function t(e) {
                return e(n)
            }
            var o = r(n),
                a = {
                    fold: function (e, t) {
                        return t(n)
                    },
                    is: function (e) {
                        return n === e
                    },
                    isSome: h,
                    isNone: u,
                    getOr: o,
                    getOrThunk: o,
                    getOrDie: o,
                    getOrNull: o,
                    getOrUndefined: o,
                    or: e,
                    orThunk: e,
                    map: function (e) {
                        return T(e(n))
                    },
                    each: function (e) {
                        e(n)
                    },
                    bind: t,
                    exists: t,
                    forall: t,
                    filter: function (e) {
                        return e(n) ? a : m
                    },
                    toArray: function () {
                        return [n]
                    },
                    toString: function () {
                        return "some(" + n + ")"
                    },
                    equals: function (e) {
                        return e.is(n)
                    },
                    equals_: function (e, t) {
                        return e.fold(u, function (e) {
                            return t(n, e)
                        })
                    }
                };
            return a
        },
        x = {
            some: T,
            none: n,
            from: function (e) {
                return null === e || e === undefined ? m : T(e)
            }
        },
        P = (C = "function", function (e) {
            return function (e) {
                if (null === e) return "null";
                var t = typeof e;
                return "object" == t && (Array.prototype.isPrototypeOf(e) || e.constructor && "Array" === e.constructor.name) ? "array" : "object" == t && (String.prototype.isPrototypeOf(e) || e.constructor && "String" === e.constructor.name) ? "string" : t
            }(e) === C
        }),
        M = Array.prototype.slice,
        O = Array.prototype.indexOf,
        F = (P(Array.from) && Array.from, Object.keys),
        S = Object.hasOwnProperty,
        _ = function (e, t) {
            return S.call(e, t)
        },
        E = [{
            shortcuts: ["Meta + B"],
            action: "Bold"
        }, {
            shortcuts: ["Meta + I"],
            action: "Italic"
        }, {
            shortcuts: ["Meta + U"],
            action: "Underline"
        }, {
            shortcuts: ["Meta + A"],
            action: "Select all"
        }, {
            shortcuts: ["Meta + Y", "Meta + Shift + Z"],
            action: "Redo"
        }, {
            shortcuts: ["Meta + Z"],
            action: "Undo"
        }, {
            shortcuts: ["Access + 1"],
            action: "Header 1"
        }, {
            shortcuts: ["Access + 2"],
            action: "Header 2"
        }, {
            shortcuts: ["Access + 3"],
            action: "Header 3"
        }, {
            shortcuts: ["Access + 4"],
            action: "Header 4"
        }, {
            shortcuts: ["Access + 5"],
            action: "Header 5"
        }, {
            shortcuts: ["Access + 6"],
            action: "Header 6"
        }, {
            shortcuts: ["Access + 7"],
            action: "Paragraph"
        }, {
            shortcuts: ["Access + 8"],
            action: "Div"
        }, {
            shortcuts: ["Access + 9"],
            action: "Address"
        }, {
            shortcuts: ["Alt + 0"],
            action: "Open help dialog"
        }, {
            shortcuts: ["Alt + F9"],
            action: "Focus to menubar"
        }, {
            shortcuts: ["Alt + F10"],
            action: "Focus to toolbar"
        }, {
            shortcuts: ["Alt + F11"],
            action: "Focus to element path"
        }, {
            shortcuts: ["Ctrl + F9"],
            action: "Focus to contextual toolbar"
        }, {
            shortcuts: ["Shift + Enter"],
            action: "Popup-Menü für geteilte Schaltflächen öffnen"
        }, {
            shortcuts: ["Meta + K"],
            action: "Insert link (if link plugin activated)"
        }, {
            shortcuts: ["Meta + S"],
            action: "Save (if save plugin activated)"
        }, {
            shortcuts: ["Meta + F"],
            action: "Find (if searchreplace plugin activated)"
        }, {
            shortcuts: ["Meta + Shift + F"],
            action: "Switch to or from fullscreen mode"
        }],
        I = tinymce.util.Tools.resolve("tinymce.Env"),
        j = function (e) {
            var n = I.mac ? {
                    alt: "&#x2325;",
                    ctrl: "&#x2303;",
                    shift: "&#x21E7;",
                    meta: "&#x2318;",
                    access: "&#x2303;&#x2325;"
                } : {
                    meta: "Ctrl ",
                    access: "Shift + Alt "
                },
                t = e.split("+"),
                o = y(t, function (e) {
                    var t = e.toLowerCase().trim();
                    return _(n, t) ? n[t] : e
                });
            return I.mac ? o.join("").replace(/\s/, "") : o.join("+")
        },
        H = function () {
            return {
                name: "shortcuts",
                title: "Handy Shortcuts",
                items: [{
                    type: "table",
                    header: ["Action", "Shortcut"],
                    cells: y(E, function (e) {
                        var t = y(e.shortcuts, j).join(" or ");
                        return [e.action, t]
                    })
                }]
            }
        },
        U = tinymce.util.Tools.resolve("tinymce.util.I18n"),
        W = [{
            key: "advlist",
            name: "Advanced List"
        }, {
            key: "anchor",
            name: "Anchor"
        }, {
            key: "autolink",
            name: "Autolink"
        }, {
            key: "autoresize",
            name: "Autoresize"
        }, {
            key: "autosave",
            name: "Autosave"
        }, {
            key: "bbcode",
            name: "BBCode"
        }, {
            key: "charmap",
            name: "Character Map"
        }, {
            key: "code",
            name: "Code"
        }, {
            key: "codesample",
            name: "Code Sample"
        }, {
            key: "colorpicker",
            name: "Color Picker"
        }, {
            key: "directionality",
            name: "Directionality"
        }, {
            key: "emoticons",
            name: "Emoticons"
        }, {
            key: "fullpage",
            name: "Full Page"
        }, {
            key: "fullscreen",
            name: "Full Screen"
        }, {
            key: "help",
            name: "Help"
        }, {
            key: "hr",
            name: "Horizontal Rule"
        }, {
            key: "image",
            name: "Image"
        }, {
            key: "imagetools",
            name: "Image Tools"
        }, {
            key: "importcss",
            name: "Import CSS"
        }, {
            key: "insertdatetime",
            name: "Insert Date/Time"
        }, {
            key: "legacyoutput",
            name: "Legacy Output"
        }, {
            key: "link",
            name: "Link"
        }, {
            key: "lists",
            name: "Lists"
        }, {
            key: "media",
            name: "Media"
        }, {
            key: "nonbreaking",
            name: "Nonbreaking"
        }, {
            key: "noneditable",
            name: "Noneditable"
        }, {
            key: "pagebreak",
            name: "Page Break"
        }, {
            key: "paste",
            name: "Paste"
        }, {
            key: "preview",
            name: "Preview"
        }, {
            key: "print",
            name: "Print"
        }, {
            key: "save",
            name: "Save"
        }, {
            key: "searchreplace",
            name: "Search and Replace"
        }, {
            key: "spellchecker",
            name: "Spell Checker"
        }, {
            key: "tabfocus",
            name: "Tab Focus"
        }, {
            key: "table",
            name: "Table"
        }, {
            key: "template",
            name: "Template"
        }, {
            key: "textcolor",
            name: "Text Color"
        }, {
            key: "textpattern",
            name: "Text Pattern"
        }, {
            key: "toc",
            name: "Table of Contents"
        }, {
            key: "visualblocks",
            name: "Visual Blocks"
        }, {
            key: "visualchars",
            name: "Visual Characters"
        }, {
            key: "wordcount",
            name: "Word Count"
        }, {
            key: "advcode",
            name: "Advanced Code Editor*"
        }, {
            key: "formatpainter",
            name: "Format Painter*"
        }, {
            key: "powerpaste",
            name: "PowerPaste*"
        }, {
            key: "tinydrive",
            name: "Tiny Drive*"
        }, {
            key: "tinymcespellchecker",
            name: "Spell Checker Pro*"
        }, {
            key: "a11ychecker",
            name: "Accessibility Checker*"
        }, {
            key: "linkchecker",
            name: "Link Checker*"
        }, {
            key: "mentions",
            name: "Mentions*"
        }, {
            key: "mediaembed",
            name: "Enhanced Media Embed*"
        }, {
            key: "checklist",
            name: "Checklist*"
        }, {
            key: "casechange",
            name: "Case Change*"
        }, {
            key: "permanentpen",
            name: "Permanent Pen*"
        }, {
            key: "pageembed",
            name: "Page Embed*"
        }, {
            key: "tinycomments",
            name: "Tiny Comments*"
        }, {
            key: "advtable",
            name: "Advanced Tables*"
        }, {
            key: "autocorrect",
            name: "Autocorrect*"
        }],
        D = function (e) {
            function r(t, n) {
                return function (e, t) {
                    for (var n = 0, o = e.length; n < o; n++) {
                        var a = e[n];
                        if (t(a, n)) return x.some(a)
                    }
                    return x.none()
                }(W, function (e) {
                    return e.key === n
                }).fold(function () {
                    var e = t.plugins[n].getMetadata;
                    return "function" == typeof e ? o(e()) : n
                }, function (e) {
                    return o({
                        name: e.name,
                        url: "https://www.tiny.cloud/docs/plugins/" + e.key
                    })
                })
            }
            var t, n, o = l(k, '<a href="${url}" target="_blank" rel="noopener">${name}</a>');
            return {
                name: "bbcodes",
                title: "BB Codes",
                items: [{
                    type: "htmlpanel",
                    presets: "document",
                    html: "<table data-alloy-tabstop='true' tabindex='-1' class='tox bbcodetable tox-dialog__table'><thead><tr><th>BB Code</th><th>Verwendung</th><th>Information</th></tr></thead><tbody><tr><td>[ticket]</td><td>[ticket=<i>TicketID</i>]<i>Beschriftung</i>[/ticket]</td><td>Mit dem <i>ticket</i> BB Code kannst du wie mit einem Link, auf ein anderes Ticket verweisen.</td></tr><tr><td>[answer]</td><td>[answer=<i>AntwortID</i>]<i>Beschriftung</i>[/answer]</td><td>Mit dem <i>answer</i> BB Code kannst du wie mit einem Link, auf eine Antwort des selben Tickets verweisen.</td></tr></tbody></table>"
                }]
            }
        },
        N = tinymce.util.Tools.resolve("tinymce.EditorManager"),
            L = function () {
            var e, t, n = '<a href="https://www.tinymce.com/docs/changelog/?utm_campaign=editor_referral&utm_medium=help_dialog&utm_source=tinymce" target="_blank">TinyMCE ' + (e = N.majorVersion, t = N.minorVersion, 0 === e.indexOf("@") ? "X.X.X" : e + "." + t) + "</a>";
            return {
                name: "versions",
                title: "Version",
                items: [{
                    type: "htmlpanel",
                    html: "<p>Du verwendest " + n + ", mit <a href='https://github.com/Kuschel-Swein/KuschelTickets' target='_blank'>KuschelTickets " + kuscheltickets_version + "</a>.</p>",
                    presets: "document"
                }]
            }
        },
        B = function () {
            return {
                name: "keyboardnav",
                title: "Keyboard Navigation",
                items: [{
                    type: "htmlpanel",
                    presets: "document",
                    html: "<h1>Tastatur-Navigation der Editor-Oberfläche </h1>\n\n<h2>Tastatur-Navigation aktivieren</h2>\n\n<p>Die Abschnitte der äußeren Oberfläche des Editors - die Menüleiste, die Werkzeugleiste, die Seitenleiste und die Fußzeile - sind alle über die Tastatur navigierbar. Daher gibt es mehrere Möglichkeiten, die Navigation über die Tastatur zu aktivieren: </p>\n<ul>\n <li>Fokussieren Sie die Menüleiste: Alt + F9 (Windows) oder &#x2325;F9 (MacOS)</li>\n <li>Fokussieren Sie die Symbolleiste: Alt + F10 (Windows) oder &#x2325;F10 (MacOS)</li>\n <li>Fokussieren Sie die Fußzeile: Alt + F11 (Windows) oder &#x2325;F11 (MacOS)</li>\n</ul>\n\n<p>Durch Fokussieren der Menü- oder Symbolleiste wird die Tastaturnavigation beim ersten Punkt in der Menü- oder Symbolleiste gestartet, der mit einem grauen Hintergrund hervorgehoben wird. Wenn Sie die Fußzeile fokussieren, wird die Tastaturnavigation beim ersten Punkt im Elementpfad gestartet, der durch eine Unterstreichung hervorgehoben wird. </p>\n\n<h2>Bewegen zwischen den Abschnitten der Benutzeroberfläche </h2>\n\n<p>Bei aktiver Tastatur-Navigation wird der Fokus durch Drücken der Tabulatortaste gegebenenfalls zum nächsten Hauptabschnitt der Benutzeroberfläche verschoben. Diese Abschnitte sind: </p>\n<ul>\n <li>die Menüleiste </li>\n <li>jede Gruppe der Symbolleiste </li>\n <li>die Seitenleiste </li>\n <li>der Elementweg in der Fußzeile </li>\n <li>die Wortanzahl Umschalttaste in der Fußzeile </li>\n <li> der Branding-Link in der Fußzeile </li>\n</ul>\n\n<p> Durch Drücken der Umschalttaste + Tabulatortaste bewegen Sie sich rückwärts durch die gleichen Abschnitte, außer beim Übergang von der Fußzeile zur Symbolleiste. Durch Fokussieren des Elementpfads und anschließendes Drücken von Umschalt + Tabulator wird der Fokus auf die erste Symbolleistengruppe verschoben, nicht auf die letzte. </p>\n\n<h2>Bewegen innerhalb der UI-Abschnitte</h2>\n\n<p>Tastaturnavigation innerhalb der UI-Abschnitte kann normalerweise mit den Pfeiltasten nach links und rechts erreicht werden. Dies beinhaltet:</p>\n<ul>\n <li>Bewegung zwischen Menüs in der Menüleiste </li>\n <li>Bewegung zwischen Schaltflächen in einer Symbolleistengruppe </li>\n <li>Bewegung zwischen Elementen im Elementpfad </li>\n</ul>\n\n<p>In all diesen UI-Abschnitten wird die Tastaturnavigation innerhalb des Abschnitts wechseln. Wenn Sie z.B. die letzte Schaltfläche in einer Symbolleistengruppe fokussieren und dann den Pfeil nach rechts drücken, wird der Fokus auf das erste Element in derselben Symbolleistengruppe verschoben. </p>\n\n\n<h1>Schaltflächen ausführen </h1>\n\n<p>Um eine Schaltfläche auszuführen, navigieren Sie die Auswahl zur gewünschten Schaltfläche und drücken Sie die Leertaste oder die Eingabetaste.</p>\n\n<h1>Menüs öffnen, navigieren und schließen </h1>\n\n<p>Wenn Sie eine Menüschaltfläche oder eine Symbolleistenschaltfläche mit einem Menü fokussieren, wird das Menü durch Drücken der Leertaste, der Eingabetaste oder des Pfeils nach unten geöffnet. Wenn das Menü geöffnet wird, wird der erste Eintrag ausgewählt. Um sich im Menü nach oben oder unten zu bewegen, drücken Sie die Auf- bzw. Abwärtspfeiltaste. Dies gilt auch für Untermenüs, die ebenfalls mit den Pfeiltasten nach links und rechts geöffnet und geschlossen werden können.</p>\n\n<p>Um ein aktives Menü zu schließen, drücken Sie die Escape-Taste. Wenn ein Menü geschlossen wird, wird die Auswahl wieder auf die vorherige Auswahl zurückgesetzt. Dies gilt auch für das Schließen von Untermenüs.</p>\n\n<h1>Kontextsymbolleisten und -menüs</h1>\n\n<p>Um eine geöffnete Kontext-Symbolleiste wie die Tabellenkontext-Symbolleiste zu fokussieren, drücken Sie Strg + F9 (Windows) oder &#x2303;F9 (MacOS).</p>\n\n<p>Die Navigation in der Kontext-Symbolleiste entspricht der Symbolleisten-Navigation, und die Navigation im Kontextmenü entspricht der Standardmenü-Navigation. </p>\n\n<h1>Dialognavigation</h1>\n\n<p>Es gibt zwei Arten von Dialog-UIs in TinyMCE: Dialoge mit und ohne Registerkarten.</p>\n\n<p> Wenn ein Dialog ohne Registerkarten geöffnet wird, wird die erste interaktive Komponente im Dialog fokussiert. Benutzer können zwischen den interaktiven Komponenten navigieren, indem sie die Tabulatortaste drücken. Dazu gehören auch alle Fußschaltflächen. Die Navigation wird zur ersten Dialogkomponente zurückkehren, wenn die Tabulatortaste gedrückt wird, während die letzte Komponente im Dialog fokussiert wird. Durch Drücken von Shift + Tab wird rückwärts navigiert. </p>\n\n<p>Wenn ein Dialog mit Registerkarten geöffnet wird, wird die erste Schaltfläche im Registerkartenmenü fokussiert. Durch Drücken von tab wird zur ersten interaktiven Komponente in diesem Register navigiert und durch die Komponenten von tab\u2019, die Fußzeilen-Schaltflächen und dann zurück zur Registerkarten-Schaltfläche gewechselt. Um zu einer anderen Registerkarte zu wechseln, fokussieren Sie die Registerkarte für die aktuelle Registerkarte und verwenden Sie dann die Pfeiltasten, um durch die Registerkartenschaltflächen zu blättern.</p>"
                }]
            }
        };
    ! function z() {
        t.add("help", function (e) {
            var t = a({}),
                n = function (n) {
                    return {
                        addTab: function (e) {
                            var t = n.get();
                            t[e.name] = e, n.set(t)
                        }
                    }
                }(t),
                o = A(e, t);
            return s(e, o), i(e, o), e.shortcuts.add("Alt+0", "Open help dialog", "mceHelp"), n
        })
    }()
}();